services:
  
  eturn_db:
    container_name: eturn_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    image: postgres:latest
    restart: always
    # ports:
    #   - ${DB_PORT}:5432
    # expose:
    #   - ${DB_PORT}
    volumes:
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./DB/data:/var/lib/postgresql/data
  
  eureka:
    build:
      context: .\Backend\eureka\
      dockerfile: Dockerfile
    container_name: eureka
    restart: unless-stopped

  gateway:
    build:
      context: .\Backend\gateway
      dockerfile: Dockerfile
    container_name: gateway
    restart: unless-stopped
    depends_on:
      - eureka
    environment:
      EUREKA_URL: ${EUREKA_URL}
      GATEWAY_PORT: ${GATEWAY_PORT}
  
  pacientes:
    build:
      context: .\Backend\pacientes
      dockerfile: Dockerfile
    container_name: pacientes
    depends_on:
      - eturn_db
      - eureka
      - gateway
    environment:
      CERT_PASSWORD: ${CERT_PASSWORD}
      DB_HOST: ${DB_HOST}
      EUREKA_URL: ${EUREKA_URL}
      PACIENTES_PORT: ${PACIENTES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    restart: unless-stopped

  seguridad:
    build:
      context: .\Backend\seguridad
      dockerfile: Dockerfile
    container_name: seguridad
    depends_on:
      - eturn_db
      - eureka
      - gateway
    environment:
      CERT_PASSWORD: ${CERT_PASSWORD}
      DB_HOST: ${DB_HOST}
      EUREKA_URL: ${EUREKA_URL}
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      SEGURIDAD_PORT: ${SEGURIDAD_PORT}
    restart: unless-stopped

  usuarios:
    build:
      context: .\Backend\usuarios
      dockerfile: Dockerfile
    container_name: usuarios
    depends_on:
      - eturn_db
      - eureka
      - gateway
    environment:
      CERT_PASSWORD: ${CERT_PASSWORD}
      DB_HOST: ${DB_HOST}
      EUREKA_URL: ${EUREKA_URL}
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      USUARIOS_PORT: ${USUARIOS_PORT}
    restart: unless-stopped

  servicios:
    build:
      context: .\Backend\servicios
      dockerfile: Dockerfile
    container_name: servicios
    depends_on:
      - eturn_db
      - eureka
      - gateway
    environment:
      CERT_PASSWORD: ${CERT_PASSWORD}
      DB_HOST: ${DB_HOST}
      EUREKA_URL: ${EUREKA_URL}
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      SERVICIOS_PORT: ${SERVICIOS_PORT}
    restart: unless-stopped

  turnos:
    build:
      context: .\Backend\turnos
      dockerfile: Dockerfile
    container_name: turnos
    depends_on:
      - eturn_db
      - eureka
      - gateway
      - pacientes
      - servicios
      - usuarios
    environment:
      CERT_PASSWORD: ${CERT_PASSWORD}
      DB_HOST: ${DB_HOST}
      EUREKA_URL: ${EUREKA_URL}
      TURNOS_PORT: ${TURNOS_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    restart: unless-stopped
    
  proxy_reverso:
    build:
      context: ./NGINX
    container_name: proxy_reverso
    ports:
      - ${NGINX_HTTPS_PORT}:443
    expose:
      - ${NGINX_HTTPS_PORT}
    environment:
      CERT_FILE: ${CERT_FILE}
      KEY_FILE: ${KEY_FILE}
      GATEWAY_PORT: ${GATEWAY_PORT}
    depends_on:
      - turnos